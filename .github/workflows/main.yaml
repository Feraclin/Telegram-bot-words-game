name: Deploy to VPS
on:
  workflow_dispatch:
jobs:
  run_tests:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: kts
          POSTGRES_HOST: db
          POSTGRES_PORT: 5432
          POSTGRES_DEFAULT_HOST: db
          POSTGRES_DEFAULT_PORT: 5432
          POSTGRES_DEFAULT_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DEFAULT_PASS: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DEFAULT_DB: kts
        ports:
          - 5432:5432
      rabbitmq:
        image: heidiks/rabbitmq-delayed-message-exchange:latest
        env:
          RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
          RABBITMQ_HOST: rabbitmq
          RABBITMQ_PORT: 5672
        ports:
          - 5672:5672
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Migrate database
        run: poetry run alembic upgrade head
      - name: Run tests
        run: poetry run pytest --cov=app
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            docker.io/username/poller:latest
            docker.io/username/worker:latest
            docker.io/username/sender:latest
            docker.io/username/aiohttp:latest
        secrets:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy package
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: 22
          username: ${{ secrets.USER_VPS }}
          password: ${{ secrets.USER_PWD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/tg_bot
            git pull origin master
            docker-compose down
            docker-compose up -d --force-recreate
        env:
          # TelegramBot
          BOT_TOKEN_TG: ${{ secrets.BOT_TOKEN_TG }}
          #YandexDict
          YANDEX_DICT_TOKEN: ${{ secrets.YANDEX_DICT_TOKEN }}
          #RabbitMQ
          RABBITMQ_DEFAULT_HOST: rabbitmq
          RABBITMQ_DEFAULT_PORT: 5672
          RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASSWORD }}
          #Database:
          POSTGRES_DEFAULT_HOST: db
          POSTGRES_DEFAULT_PORT: 5432
          POSTGRES_DEFAULT_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DEFAULT_PASS: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DEFAULT_DB: kts
          #session
          SESSION_KEY: ${{ secrets.SESSION_KEY }}
          #admin
          EMAIL: $EMAIL
          PASSWORD: $PASS